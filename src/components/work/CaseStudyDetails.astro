---
import Detail from './Detail.astro'
import Button from '@components/Button.astro'
import type { CaseStudy } from '@types'
import { Icon } from 'astro-icon'

interface Props {
  caseStudy: CaseStudy
}

const {
  caseStudy: {
    data: { client, description, timeline, projectURL, technology, features },
  },
} = Astro.props

function getFormattedTimeline(timeline: { start: Date | null ; end: Date | null }) {
  if (!timeline.start) {
    return 'Unknown';
  }
  
  const formatter = new Intl.DateTimeFormat('en-US', {
    month: 'short',
    year: 'numeric',
  });

  if (!timeline.end) {
    return `${formatter.format(timeline.start)} to Present`;
  }

  const monthDifference =
    (timeline.end.getFullYear() - timeline.start.getFullYear()) * 12 +
    (timeline.end.getMonth() - timeline.start.getMonth());

  const monthLabel = monthDifference === 1 ? 'month' : 'months';
  const formattedTimeline = `${monthDifference} ${monthLabel} (${formatter.format(
    timeline.start
  )} - ${formatter.format(timeline.end)})`;

  return formattedTimeline;
}

---

<section class="overflow-hidden bg-white py-16 sm:py-20 lg:py-28">
  <div
    class="mx-auto grid max-w-lg px-5 sm:max-w-2xl sm:px-6 lg:max-w-6xl lg:grid-cols-10 lg:px-8 xl:px-12"
  >
    <div
      class="order-2 mt-8 border-t border-slate-200 pt-8 lg:order-1 lg:col-span-3 lg:mt-0 lg:border-0 lg:pr-8 lg:pt-0"
    >
      <dl class="space-y-8">
        {
          (client.description as string)?.trim() && (
            <Detail label="Client" data={client.description} />
          )
        }
        {
          client.industry?.trim() && (
            <Detail label="Industry" data={client.industry} />
          )
        }
        {
          technology?.trim() && (
            <Detail label="Technology" data={technology} />
          )
        }
        {
          client.companySize?.trim() && (
            <Detail label="Company Size" data={client.companySize} />
          )
        }
        {
          client.headquarters?.trim() && (
            <Detail label="Headquarters" data={client.headquarters} />
          )
        }

        <Detail
          label="Project Duration"
          data={getFormattedTimeline(timeline)}
        />
      </dl>
      { (projectURL ?? projectURL)?.trim() && (
        <Button href={projectURL ?? undefined} target="_blank" class="mt-14 !font-medium">
          Visit Website
          <Icon
            name="arrow-up-right"
            class="h-5 w-5 text-slate-50 duration-200 ease-in-out group-hover:text-white"
          />
        </Button>
      )}
    </div>
    <div class="order-1 lg:order-2 lg:col-span-7 lg:pl-16">
      <h3
        class="font-display text-xl font-medium leading-8 text-slate-900 sm:text-2xl sm:leading-10"
      >
        {description}
      </h3>
      <div class="prose mt-6 sm:prose-lg sm:mt-8"><slot /></div>
      {
        features && (
          <div class="mt-5">
            <p class="mb-2 font-bold" style="font-size: 1.5rem;">
              Features:
            </p>
            <ul>
              {features.map((feature: any, index) => (
                <li class="mb-3">
                  <strong>{index + 1}. {feature.title}</strong>
                  {feature.items && (
                    <ul class="list-disc pl-6">
                      {feature.items.map((item : any) => (
                        <li>{item}</li>
                      ))}
                    </ul>
                  )}
                </li>
              ))}
            </ul>
          </div>
        )
      }
    </div>
  </div>
</section>
